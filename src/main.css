html {
  background-color: black;
  height: 100%;
  width: 100%;
}

body {
  margin: 0;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.wall {
  width: 80px;
  height: 80px;
  background-color: silver;
  border: 1px solid black;
  display: block;

  transform:
    perspective(200px)
    translate3d(0px, 0, 0)
    rotate3d(0, 1, 0, 90deg); 
}

#application {
  display: flex;
  justify-content: center;
  align-content: center;
}

#viewport {
  perspective: 600px;
  border: 1px solid black;
  background-color: black;
  width: 400px;
  height: 400px;

  overflow: clip;

  image-rendering: pixelated;

  border: 4px inset silver;
}

canvas {
  width: 400px;
  height: 400px;
  border: 4px inset silver;
}

.distance1 div { filter: brightness(0.8); }
.distance2 div { filter: brightness(0.6); }
.distance3 div { filter: brightness(0.4); }
.distance4 div { filter: brightness(0.2); }

.cube {
  transform-style: preserve-3d;
  transform: translate3d(0, 0, 0);
}

.corridor {
  transform-style: preserve-3d;
  transform: translate3d(0, 0, 0);
}

.corridor div {
  display: flex;
  width: 400px;
  height: 400px;
  position: absolute;
  top: 0;
  left: 0;
  background-size: 100% 100%;
  background-repeat: no-repeat;

  color: white;
  text-align: center;
  font-size: 8em;

  align-items: center;
  justify-content: center;
}

.corridor .floor {
  background-image: url('../public/Pixelated_Tiles01.png');
  transform: translate3d(0, 200px, -200px) rotate3d(1, 0, 0, 90deg);
}

.corridor .ceiling {
  background-image: url('../public/Pixelated_Tiles02.png');
  transform: translate3d(0, -200px, -200px) rotate3d(1, 0, 0, -90deg);
}

.cube div {
  display: flex;
  width: 400px;
  height: 400px;
  position: absolute;
  top: 0;
  left: 0;
  background-image: url('../public/Pixelated_Bricks01.png');
  background-size: 100% 100%;
  background-repeat: no-repeat;

  color: white;
  text-align: center;
  font-size: 8em;

  align-items: center;
  justify-content: center;
}

.cube .front {
}

.cube .left {
  transform: rotate3d(0, 1, 0, -90deg) translate3d(-200px, 0, 200px);
}

.cube .right {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(200px, 0, 200px);
}